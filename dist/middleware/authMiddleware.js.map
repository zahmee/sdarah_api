{"version":3,"sources":["../../src/middleware/authMiddleware.js"],"names":["TOKENTIME","SECRET","authenticate","secret","IsAdmin","req","res","next","Account","findById","user","id","err","status","send","admin","end","generateAccessToken","token","jwt","sign","expiresIn","onlyToken","respond","json","username","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAY,KAAK,EAAL,GAAU,EAAV,GAAe,GAAjC;AACA,IAAMC,SAAS,0BAAf;;AAEA,IAAIC,eAAe,0BAAW,EAAEC,QAAQF,MAAV,EAAX,CAAnB;;AAEA,IAAIG,UAAU,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9BC,sBAAQC,QAAR,CAAiBJ,IAAIK,IAAJ,CAASC,EAA1B,EAA8B,MAA9B,EAAsC,UAACC,GAAD,EAAMF,IAAN,EAAe;AACjD,YAAIE,GAAJ,EAAS;AACL,mBAAON,IAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,GAArB,CAAP;AACH;AACD,YAAIF,KAAKK,KAAL,KAAe,IAAnB,EAAyB;AACrBR;AACH,SAFD,MAGK;AACDD,gBAAIU,GAAJ;AACH;AACJ,KAVD;AAWH,CAZD;AAaA,IAAIC,sBAAsB,SAAtBA,mBAAsB,CAACZ,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1CF,QAAIa,KAAJ,GAAYb,IAAIa,KAAJ,IAAa,EAAzB;AACAb,QAAIa,KAAJ,GAAYC,uBAAIC,IAAJ,CAAS;AACjBT,YAAIN,IAAIK,IAAJ,CAASC;AADI,KAAT,EAETV,MAFS,EAED;AACHoB,mBAAWrB;AADR,KAFC,CAAZ;AAKAO;AACH,CARD;;AAUA,IAAIe,YAAY,SAAZA,SAAY,CAACX,EAAD,EAAQ;AACpB,WAAOQ,uBAAIC,IAAJ,CAAS;AACZT,YAAIA;AADQ,KAAT,EAEJV,MAFI,EAEI;AACHoB,mBAAWrB;AADR,KAFJ,CAAP;AAKH,CAND;;AAQA,IAAIuB,UAAU,SAAVA,OAAU,CAAClB,GAAD,EAAMC,GAAN,EAAc;AACxBA,QAAIO,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqB;AACjBd,cAAML,IAAIK,IAAJ,CAASe,QADE;AAEjBP,eAAOb,IAAIa;AAFM,KAArB;AAIH,CALD;;AAQAQ,OAAOC,OAAP,GAAiB;AACbzB,8BADa;AAEbe,4CAFa;AAGbM,oBAHa;AAIbD,wBAJa;AAKblB;AALa,CAAjB","file":"authMiddleware.js","sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport expressJwt from \"express-jwt\";\r\nimport Account from \"../model/account\";\r\n\r\nconst TOKENTIME = 60 * 60 * 24 * 356;\r\nconst SECRET = \"ZaHmEe!1@2 AfMnIsH 1243b\";\r\n\r\nlet authenticate = expressJwt({ secret: SECRET });\r\n\r\nlet IsAdmin = (req, res, next) => {\r\n    Account.findById(req.user.id, '-__v', (err, user) => {\r\n        if (err) {\r\n            return res.status(401).send(err);\r\n        }\r\n        if (user.admin === true) {\r\n            next();\r\n        }\r\n        else {\r\n            res.end();\r\n        }\r\n    });\r\n};\r\nlet generateAccessToken = (req, res, next) => {\r\n    req.token = req.token || {};\r\n    req.token = jwt.sign({\r\n        id: req.user.id,\r\n    }, SECRET, {\r\n            expiresIn: TOKENTIME\r\n        });\r\n    next();\r\n};\r\n\r\nlet onlyToken = (id) => {\r\n    return jwt.sign({\r\n        id: id,\r\n    }, SECRET, {\r\n            expiresIn: TOKENTIME\r\n        });\r\n};\r\n\r\nlet respond = (req, res) => {\r\n    res.status(200).json({\r\n        user: req.user.username,\r\n        token: req.token\r\n    });\r\n};\r\n\r\n\r\nmodule.exports = {\r\n    authenticate,\r\n    generateAccessToken,\r\n    respond,\r\n    onlyToken,\r\n    IsAdmin\r\n};\r\n"]}