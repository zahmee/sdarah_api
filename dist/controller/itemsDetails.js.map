{"version":3,"sources":["../../src/controller/itemsDetails.js"],"names":["id","check_id","req","res","next","itemsDetails","findOne","item_detail_id","exec","err","date","status","send","config","db","api","post","authenticate","newRow","csBills","body","item","count","buy","sell","sell_count","return_count","real_count","last_date_sell","Date","expiration_date","temp_date","year","month","day","save","json","message","_id","get","size","page","colum","text","query","parseInt","g","Number","isInteger","$gt","populate","path","select","data","s","toJSON","add_dirct","Item","find","where","equals","itm_data","length","arr","split","or","name","$regex","$options","limit","skip","serch_arr","forEach","element","push","and","console","log","params","put","findById","editRow","delete","remove","key"],"mappings":"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","file":"itemsDetails.js","sourcesContent":["import { Router } from \"express\";\r\nimport itemsDetails from \"../model/itemsDetails\";\r\nimport { authenticate, IsAdmin } from \"../middleware/authMiddleware\";\r\nimport randomID from 'random-id';\r\nimport Item from \"../model/item\";\r\n\r\n// const moment = require('moment-timezone');\r\n\r\nlet id = randomID(13, \"0\");\r\n\r\nlet check_id = (req, res, next) => {\r\n  itemsDetails.findOne({ item_detail_id: id }).exec((err, date) => {\r\n    if (err) {\r\n      return res.status(401).send(err);\r\n    }\r\n    if (!date) {\r\n      next();\r\n    }\r\n    else {\r\n      id = randomID(13, \"0\");\r\n      next();\r\n    }\r\n  }\r\n  );\r\n};\r\n\r\nexport default ({ config, db }) => {\r\n\r\n  let api = Router();\r\n\r\n  \r\n  // v1/itemsDetails/add\r\n  api.post(\"/add\", authenticate, check_id, (req, res) => {\r\n    let newRow = new itemsDetails();\r\n    newRow.csBills = req.body.csBills;\r\n    newRow.item = req.body.item;\r\n    newRow.count = req.body.count;\r\n    newRow.buy = req.body.buy;\r\n    newRow.sell = req.body.sell;\r\n    newRow.sell_count = 0;\r\n    newRow.return_count = 0;\r\n    newRow.real_count = req.body.count;\r\n    newRow.item_detail_id = id;\r\n    newRow.last_date_sell = new Date();\r\n    if (req.body.expiration_date) {\r\n      const temp_date = req.body.expiration_date;\r\n      newRow.expiration_date = temp_date.year + '-' + temp_date.month + '-' + temp_date.day;\r\n    }\r\n    newRow.save(err => {\r\n      if (err) {\r\n        return res.send(err);\r\n      } else {\r\n        return res.json({ message: \"saved\", _id: newRow._id });\r\n      }\r\n    });\r\n  });\r\n\r\n  // ======================   invoce   ==============================\r\n  // v1/itemsDetails/invoc\r\n  api.get(\"/invoc\", (req, res) => {\r\n    let size = 20;\r\n    let page = 0;\r\n    let colum = \"\";\r\n    let text = \"\";\r\n    (req.query.page) ? page = parseInt(req.query.page) : page = 0;\r\n    (req.query.size) ? size = parseInt(req.query.size) : size = 20;\r\n    (req.query.colum) ? colum = (req.query.colum) : colum = \"\";\r\n    (req.query.text) ? text = (req.query.text) : text = \"\";\r\n    let g = Number(text )\r\n    if (Number.isInteger(g)) {\r\n      const query = itemsDetails.findOne({ 'is_active': true, 'item_detail_id': parseInt(text), 'real_count': { $gt: 0 } })\r\n        .populate({\r\n          path: 'csBills',\r\n          select: 'billNo'\r\n        })\r\n        .populate({\r\n          path: 'item',\r\n          select: 'name vat'\r\n        })\r\n        .populate({\r\n          path: 'Key',\r\n          select: 'disc -_id',\r\n        });\r\n      query.exec((err, data) => {\r\n        if (err) {\r\n          return res.send(err);\r\n        }\r\n        if (data) {\r\n          let s = data.toJSON();\r\n          s.add_dirct = true;\r\n          return res.json(s);\r\n        }\r\n        else {\r\n          //<========================>  البحث بحلول أخرى \r\n          Item.find()\r\n            .where('id').equals(text)\r\n            .exec((err, data) => {\r\n              if (data[0]) {\r\n\r\n                // s.add_dirct = false ;\r\n                // <-->   اذا حصل رقم الصنف يحضر جميع الوحدات المدخلة له  <==>\r\n                // console.log(data);\r\n                itemsDetails.find({ 'is_active': true, 'item': data[0]._id, 'real_count': { $gt: 0 } })\r\n                  .populate({\r\n                    path: 'csBills',\r\n                    select: 'billNo'\r\n                  })\r\n                  .populate({\r\n                    path: 'item',\r\n                    select: 'name vat'\r\n                  })\r\n                  .populate({\r\n                    path: 'Key',\r\n                    select: 'disc -_id',\r\n                  }).exec((err, itm_data) => {\r\n                    // console.log(itm_data);\r\n                    if (itm_data.length === 1) {\r\n                      let s = itm_data[0].toJSON();\r\n                      s.add_dirct = true;\r\n                      return res.json(s);\r\n                    } else {\r\n                      return res.json(itm_data);\r\n                    }\r\n                  });\r\n                //==================================================================>><<\r\n              } else {\r\n                const arr = text.split(\" \");\r\n                if (arr.length === 1) {\r\n                  Item.find()\r\n                    .or([{ name: { $regex: text, $options: 'i' } }, { id: { $regex: text, $options: 'i' } }])\r\n                    .limit(size)\r\n                    .skip(size * page)\r\n                    .exec((err, data) => {\r\n                      return res.json(data);\r\n                    });\r\n                } else if (arr.length > 1) {\r\n                  let serch_arr = [];\r\n                  arr.forEach((element) => {\r\n                    serch_arr.push({ name: { $regex: element, $options: 'i' } })\r\n                  });\r\n                  Item.find()\r\n                    .and(serch_arr)\r\n                    .limit(size)\r\n                    .skip(size * page)\r\n                    .exec((err, data) => {\r\n                      return res.json(data);\r\n                    });\r\n                }\r\n              }\r\n            });\r\n          //<==========================================================>\r\n          // return res.json(data);\r\n        }\r\n      });\r\n    } else {\r\n      Item.find()\r\n        .where('id').equals(text)\r\n        .exec((err, data) => {\r\n          if (data[0]) {\r\n            // s.add_dirct = false ;\r\n            // <-->   اذا حصل رقم الصنف يحضر جميع الوحدات المدخلة له  <==>\r\n            console.log(data);\r\n            itemsDetails.find({ 'is_active': true, 'item': data[0]._id, 'real_count': { $gt: 0 } })\r\n              .populate({\r\n                path: 'csBills',\r\n                select: 'billNo'\r\n              })\r\n              .populate({\r\n                path: 'item',\r\n                select: 'name vat'\r\n              })\r\n              .populate({\r\n                path: 'Key',\r\n                select: 'disc -_id',\r\n              }).exec((err, itm_data) => {\r\n                console.log(itm_data);\r\n                if (itm_data.length === 1) {\r\n                  let s = itm_data[0].toJSON();\r\n                  s.add_dirct = true;\r\n                  return res.json(s);\r\n                } else {\r\n                  return res.json(itm_data);\r\n                }\r\n              });\r\n            //==================================================================>><<\r\n          } else {\r\n            const arr = text.split(\" \");\r\n            if (arr.length === 1) {\r\n              Item.find()\r\n                .or([{ name: { $regex: text, $options: 'i' } }, { id: { $regex: text, $options: 'i' } }])\r\n                .limit(size)\r\n                .skip(size * page)\r\n                .exec((err, data) => {\r\n                  return res.json(data);\r\n                });\r\n            } else if (arr.length > 1) {\r\n              let serch_arr = [];\r\n              arr.forEach((element) => {\r\n                serch_arr.push({ name: { $regex: element, $options: 'i' } })\r\n              });\r\n              Item.find()\r\n                .and(serch_arr)\r\n                .limit(size)\r\n                .skip(size * page)\r\n                .exec((err, data) => {\r\n                  return res.json(data);\r\n                });\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n  });\r\n  \r\n\r\n  // v1/itemsDetails/:id   -> get all data\r\n  api.get(\"/:id\", (req, res) => {\r\n    itemsDetails.find({ csBills: req.params.id }).populate({\r\n      path: 'item',\r\n      select: 'name _id',\r\n    }).exec((err, data) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json(data);\r\n    });\r\n  });\r\n\r\n  // /v1/itemsDetails/:id    -- put\r\n  api.put(\"/:id\", authenticate, (req, res) => {\r\n    itemsDetails.findById(req.params.id, (err, editRow) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      } else {\r\n        editRow.csBills = req.body.csBills;\r\n        editRow.item = req.body.item._id;\r\n        editRow.count = req.body.count;\r\n        editRow.buy = req.body.buy;\r\n        editRow.sell = req.body.sell;\r\n        editRow.real_count = req.body.count;\r\n        editRow.last_date_sell = new Date();\r\n        const temp_date = req.body.expiration_date;\r\n        editRow.expiration_date = temp_date.year + '-' + temp_date.month + '-' + temp_date.day;\r\n        editRow.save(err => {\r\n          if (err) {\r\n            return res.send(err);\r\n          } else {\r\n            return res.json({ message: \"update\" });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // /v1/itemsDetails/:id    -- delete\r\n  api.delete(\"/:id\", authenticate, (req, res) => {\r\n    itemsDetails.remove({ _id: req.params.id }, (err, key) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json({ message: \"remove\" });\r\n    });\r\n  });\r\n\r\n\r\n\r\n  return api;\r\n};\r\n"]}