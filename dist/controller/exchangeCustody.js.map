{"version":3,"sources":["../../src/controller/exchangeCustody.js"],"names":["api","post","authenticate","req","res","newRow","exchangeCustody","branches","body","id","branches_name","name","state","disc","save","err","send","invDataRow","forEach","newDetialRow","exchangeCustodyDetails","_id","item","el","item_id","item_name","count","json","message","get","is_active","$ne","countrow","query","find","exec","data","push","row_count","console","log","master","findOne","params","detial","data2","exp","put","remove","key","signature","signature_date","Date","row","styles","headerDark","fill","fgColor","rgb","font","color","sz","bold","alignment","vertical","horizontal","readingOrder","cellPink","cellGreen","normal1","border","top","style","bottom","left","right","normal2","num","numFmt","english","red","heading","value","billDate","specification","displayName","headerStyle","cellStyle","width","merges","start","column","end","attachment","report"],"mappings":"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","file":"exchangeCustody.js","sourcesContent":["import { Router } from 'express';\r\nimport exchangeCustody from '../model/exchangeCustody';\r\nimport exchangeCustodyDetails from '../model/exchangeCustodyDetails';\r\nimport { authenticate, IsAdmin } from '../middleware/authMiddleware';\r\nimport v4 from 'uuid/v4';\r\nimport { buildExport } from 'node-excel-export';\r\n\r\nexport default () => {\r\n  let api = Router();\r\n  // v1/invoice/add\r\n  api.post('/add', authenticate, (req, res) => {\r\n    let newRow = new exchangeCustody();\r\n    newRow.branches = req.body.branches.id;\r\n    newRow.branches_name = req.body.branches.name;\r\n    newRow.state.id = 1;\r\n    newRow.state.disc = 'مرحلة الادخال';\r\n    newRow.save(err => {\r\n      if (err) {\r\n        return res.send(err);\r\n      } else {\r\n        req.body.invDataRow.forEach(el => {\r\n          let newDetialRow = new exchangeCustodyDetails();\r\n          newDetialRow.exchangeCustody = newRow._id;\r\n          newDetialRow.item = el._id;\r\n          newDetialRow.item_id = el.item_id;\r\n          newDetialRow.item_name = el.item_name;\r\n          newDetialRow.count = el.count;\r\n          newDetialRow.save(err => {\r\n            if (err) {\r\n              return res.send(err);\r\n            }\r\n          });\r\n        });\r\n        return res.json({ message: 'saved', _id: newRow._id });\r\n      }\r\n    });\r\n  });\r\n\r\n  // ======================   get all exchanges   ==============================\r\n  api.get('/all', (req, res) => {\r\n    exchangeCustody.count(\r\n      { is_active: true, 'state.id': { $ne: 9 } },\r\n      (err, countrow) => {\r\n        const query = exchangeCustody.find({\r\n          is_active: true,\r\n          'state.id': { $ne: 9 }\r\n        });\r\n        query.exec((err, data) => {\r\n          if (err) {\r\n            return res.send(err);\r\n          }\r\n          data.push({\r\n            row_count: countrow\r\n          });\r\n          return res.json(data);\r\n        });\r\n      }\r\n    );\r\n  });\r\n  //test\r\n  api.get('/test', (req, res) => {\r\n    console.log(v4());\r\n    return res.json({ message: v4() });\r\n  });\r\n  // <=================================================>\r\n  // v1/itemsDetails/:id   -> get  data for noe custody\r\n  api.get('/:id', (req, res) => {\r\n    const master = exchangeCustody.findOne({\r\n      _id: req.params.id,\r\n      is_active: true,\r\n      'state.id': { $ne: 9 }\r\n    });\r\n    const detial = exchangeCustodyDetails.find({\r\n      exchangeCustody: req.params.id\r\n    });\r\n    master.exec((err, data) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      detial.exec((err, data2) => {\r\n        if (err) {\r\n          return res.send(err);\r\n        }\r\n        let exp = {};\r\n        exp['data'] = data2;\r\n        exp['master'] = data;\r\n        return res.json(exp);\r\n      });\r\n    });\r\n  });\r\n\r\n  // edit exchange <==========================================\r\n  api.put('/:id', authenticate, (req, res) => {\r\n    exchangeCustodyDetails.remove(\r\n      { exchangeCustody: req.params.id },\r\n      (err, key) => {\r\n        if (err) {\r\n          res.send(err);\r\n        } else {\r\n          const master = exchangeCustody.findOne({\r\n            _id: req.params.id,\r\n            is_active: true,\r\n            'state.id': { $ne: 9 }\r\n          });\r\n          master.exec((err, newRow) => {\r\n            if (err) {\r\n              return res.send(err);\r\n            } else {\r\n              newRow.branches = req.body.branches.id;\r\n              newRow.branches_name = req.body.branches.name;\r\n              newRow.state.id = 1;\r\n              newRow.state.disc = 'مرحلة الادخال';\r\n              newRow.save(err => {\r\n                if (err) {\r\n                  res.send(err);\r\n                } else {\r\n                  req.body.invDataRow.forEach(el => {\r\n                    let newDetialRow = new exchangeCustodyDetails();\r\n                    newDetialRow.exchangeCustody = newRow._id;\r\n                    newDetialRow.item = el._id;\r\n                    newDetialRow.item_id = el.item_id;\r\n                    newDetialRow.item_name = el.item_name;\r\n                    newDetialRow.count = el.count;\r\n                    newDetialRow.save(err => {\r\n                      if (err) {\r\n                        return res.send(err);\r\n                      }\r\n                    });\r\n                  });\r\n                  return res.json({ message: 'saved', _id: newRow._id });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\n  // sing exchange <==========================================\r\n  api.put('/singexchange/:id', (req, res) => {\r\n    const master = exchangeCustody.findOne({\r\n      _id: req.params.id,\r\n      is_active: true,\r\n      'state.id': { $ne: 9 }\r\n    });\r\n    master.exec((err, newRow) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      } else {\r\n        newRow.state.id = 2;\r\n        newRow.state.disc = 'مرحلة ارسال البيانات';\r\n        (newRow.signature = v4()), (newRow.signature_date = new Date()); //Date.now ,\r\n        newRow.save(err => {\r\n          if (err) {\r\n            res.send(err);\r\n          } else {\r\n            return res.json({ message: 'saved', row: newRow });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // sing exchange <==========================================\r\n  api.put('/unsingexchange/:id', (req, res) => {\r\n    const master = exchangeCustody.findOne({\r\n      _id: req.params.id,\r\n      is_active: true,\r\n      'state.id': { $ne: 9 }\r\n    });\r\n    master.exec((err, newRow) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      } else {\r\n        newRow.state.id = 1;\r\n        newRow.state.disc = 'مرحلة الادخال';\r\n        newRow.signature = '';\r\n        newRow.signature_date = '';\r\n        newRow.save(err => {\r\n          if (err) {\r\n            res.send(err);\r\n          } else {\r\n            return res.json({ message: 'saved', row: newRow });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n  // print to excel exchange <==========================================\r\n  api.get('/excel1/:id', (req, res) => {\r\n    const master = exchangeCustody.findOne({\r\n      _id: req.params.id\r\n    });\r\n    const detial = exchangeCustodyDetails.find({\r\n      exchangeCustody: req.params.id\r\n    });\r\n    master.exec((err, data) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      detial.exec((err, data2) => {\r\n        if (err) {\r\n          return res.send(err);\r\n        }\r\n        //#region *******************   excel file create  *********************\r\n        const styles = {\r\n          headerDark: {\r\n            fill: {\r\n              fgColor: {\r\n                rgb: 'FF000000'\r\n              }\r\n            },\r\n            font: {\r\n              color: {\r\n                rgb: 'FFFFFFFF'\r\n              },\r\n              sz: 14,\r\n              bold: true\r\n            },\r\n            alignment: {\r\n              vertical: 'center',\r\n              horizontal: 'center',\r\n              readingOrder: 2\r\n            }\r\n          },\r\n          cellPink: {\r\n            fill: {\r\n              fgColor: {\r\n                rgb: 'FFFFCCFF'\r\n              }\r\n            }\r\n          },\r\n          cellGreen: {\r\n            fill: {\r\n              fgColor: {\r\n                rgb: 'FF00FF00'\r\n              }\r\n            }\r\n          },\r\n          normal1: {\r\n            alignment: {\r\n              vertical: 'center',\r\n              horizontal: 'center',\r\n              readingOrder: 2\r\n            },\r\n            border: {\r\n              top: { style: 'thin', color: 'FF000000' },\r\n              bottom: { style: 'thin', color: 'FF000000' },\r\n              left: { style: 'thin', color: 'FF000000' },\r\n              right: { style: 'thin', color: 'FF000000' }\r\n            }\r\n          },\r\n          normal2: {\r\n            border: {\r\n              top: { style: 'thin', color: 'FF000000' },\r\n              bottom: { style: 'thin', color: 'FF000000' },\r\n              left: { style: 'thin', color: 'FF000000' },\r\n              right: { style: 'thin', color: 'FF000000' }\r\n            }\r\n          },\r\n          num: {\r\n            numFmt: '0',\r\n            border: {\r\n              top: { style: 'thin', color: 'FF000000' },\r\n              bottom: { style: 'thin', color: 'FF000000' },\r\n              left: { style: 'thin', color: 'FF000000' },\r\n              right: { style: 'thin', color: 'FF000000' }\r\n            }\r\n          },\r\n          english: {\r\n            alignment: {\r\n              readingOrder: 1\r\n            },\r\n            border: {\r\n              top: { style: 'thin', color: 'FF000000' },\r\n              bottom: { style: 'thin', color: 'FF000000' },\r\n              left: { style: 'thin', color: 'FF000000' },\r\n              right: { style: 'thin', color: 'FF000000' }\r\n            }\r\n          },\r\n          red: {\r\n            fill: { fgColor: { rgb: 'FFFF0000' } },\r\n            border: {\r\n              top: { style: 'thin', color: 'FF000000' },\r\n              bottom: { style: 'thin', color: 'FF000000' },\r\n              left: { style: 'thin', color: 'FF000000' },\r\n              right: { style: 'thin', color: 'FF000000' }\r\n            },\r\n            alignment: {\r\n              vertical: 'center',\r\n              horizontal: 'center',\r\n              readingOrder: 1\r\n            }\r\n          }\r\n        };\r\n        const heading = [\r\n          [{ value: ' تقرير تحويل رصيد ', style: styles.headerDark }],\r\n          [data.branches_name, '0', 'الفرع'],\r\n          [data.billDate, '0', 'تاريخ العملية'],\r\n          [data.signature, '0.', 'التوقيع'],\r\n          [data.signature_date, '0', 'تاريخ التوقيع']\r\n        ];\r\n        const specification = {\r\n          item_id: {\r\n            displayName: 'رقم الصنف',\r\n            headerStyle: styles.headerDark, // <- Header style\r\n            cellStyle: styles.num,\r\n            width: 120 // <- width in pixels\r\n          },\r\n          item_name: {\r\n            displayName: 'اسم الصنف',\r\n            headerStyle: styles.headerDark,\r\n            cellStyle: styles.normal2,\r\n            width: 420\r\n          },\r\n          count: {\r\n            displayName: 'الكمية',\r\n            headerStyle: styles.headerDark,\r\n            cellStyle: styles.normal2,\r\n            width: 150\r\n          }\r\n        };\r\n        const merges = [\r\n          { start: { row: 1, column: 1 }, end: { row: 1, column: 3 } },\r\n          { start: { row: 2, column: 1 }, end: { row: 2, column: 2 } },\r\n          { start: { row: 3, column: 1 }, end: { row: 3, column: 2 } },\r\n          { start: { row: 4, column: 1 }, end: { row: 4, column: 2 } },\r\n          { start: { row: 5, column: 1 }, end: { row: 5, column: 2 } }\r\n        ];\r\n        res.attachment('excel_report.xlsx');\r\n        const report = buildExport([\r\n          // <- Notice that this is an array. Pass multiple sheets to create multi sheet report\r\n          {\r\n            name: 'اصناف الفاتورة',\r\n            heading: heading,\r\n            merges: merges,\r\n            specification: specification,\r\n            data: data2\r\n          }\r\n        ]);\r\n        return res.send(report);\r\n        //#endregion  ***************  excel file end  ****************\r\n      });\r\n    });\r\n  });\r\n  return api;\r\n};\r\n"]}