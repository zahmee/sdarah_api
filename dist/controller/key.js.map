{"version":3,"sources":["../../src/controller/key.js"],"names":["config","db","api","post","authenticate","IsAdmin","req","res","newKey","Key","cat","id","body","cat_name","disc","is_active","save","err","send","json","message","_id","get","find","key","findById","params","put","delete","remove"],"mappings":"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","file":"key.js","sourcesContent":["import { Router } from \"express\";\r\nimport Key from \"../model/key\";\r\nimport { generateAccessToken, respond, authenticate, onlyToken,IsAdmin } from \"../middleware/authMiddleware\";\r\n\r\n//import bodyParser from 'body-parser' ;\r\n\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n  // v1/key/add\r\n  api.post(\"/add\", authenticate, IsAdmin ,  (req, res) => {\r\n \r\n    let newKey = new Key(); \r\n    newKey.cat.id = req.body.cat.id;\r\n    newKey.cat.cat_name = req.body.cat.cat_name;\r\n    newKey.disc = req.body.disc;\r\n    newKey.is_active = req.body.is_active;\r\n    newKey.save(err => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json({ message: \"saved\", _id: newKey._id });\r\n    });\r\n  });\r\n  //************************* */\r\n  api.get(\"/t\",  (req, res) => {\r\n\r\n    let newKey = new Key();\r\n    newKey.cat.id = 1 ;\r\n    newKey.cat.cat_name = 'ahmed ';\r\n    newKey.disc = 'zahmah';\r\n    newKey.is_active = true ;\r\n    newKey.save(err => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json({ message: \"saved\" });\r\n    });\r\n  });\r\n  // v1/key/   -> get all data\r\n  api.get(\"/\", (req, res) => {\r\n    Key.find({}, (err, key) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json(key);\r\n    });\r\n  });\r\n  // /v1/key/:id\r\n  api.get(\"/:id\", (req, res) => {\r\n    Key.findById(req.params.id, (err, key) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json(key);\r\n    });\r\n  });\r\n  // /v1/key/:id    -- put\r\n  api.put(\"/:id\", authenticate, (req, res) => {\r\n    Key.findById(req.params.id, (err, key) => {\r\n      if (err) {\r\n        res.send(err);\r\n      }\r\n      key.disc = req.body.disc;\r\n      key.is_active = req.body.is_active;\r\n      key.save(err => {\r\n        if (err) {\r\n          return res.send(err);\r\n        }\r\n        return res.json({ message: \"update\" });\r\n      });\r\n    });\r\n  });\r\n  // /v1/key/:id    -- delete\r\n  api.delete(\"/:id\", authenticate, (req, res) => {\r\n    Key.remove({ _id: req.params.id }, (err, key) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json({ message: \"remove\" });\r\n    });\r\n  });\r\n  //====================================================\r\n  return api;\r\n};\r\n"]}