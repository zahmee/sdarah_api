{"version":3,"sources":["../../src/controller/invoice.js"],"names":["config","db","api","post","authenticate","req","res","newRow","invoice","cash_sales","body","peopelSelected","people","peopelSelected_id","method","payway","total","invTotal","discount","dicount","vat","invVAT","net","invNetTotal","is_active","assignedTo","user","id","items","invDataRow","save","err","send","forEach","el","newDetialRow","invoiceDetails","_id","item","item_id","sell","count","json","message","get","query","itemsDetails","findOne","$gt","populate","path","select","exec","data","s","toJSON","add_dirct","find","csBills","params"],"mappings":"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","file":"invoice.js","sourcesContent":["import { Router } from \"express\";\r\nimport invoice from \"../model/invoice\";\r\nimport invoiceDetails from \"../model/invoiceDetails\";\r\nimport { authenticate, IsAdmin } from \"../middleware/authMiddleware\";\r\n\r\nexport default ({ config, db }) => {\r\n\r\n  let api = Router();\r\n\r\n\r\n  // v1/invoice/add\r\n  api.post(\"/add\", authenticate, (req, res) => {\r\n\r\n    let newRow = new invoice();\r\n\r\n    newRow.cash_sales = (req.body.peopelSelected === 100) ? true : false ;\r\n    newRow.people = req.body.peopelSelected_id ;\r\n    newRow.method = req.body.payway;\r\n    newRow.total = req.body.invTotal ;\r\n    newRow.discount = req.body.dicount ;\r\n    newRow.vat = req.body.invVAT ;\r\n    newRow.net = req.body.invNetTotal ;\r\n    newRow.is_active = true ;\r\n    newRow.assignedTo = req.user.id ;\r\n    newRow.items = req.body.invDataRow ;\r\n    newRow.save(err => {\r\n      if (err) {\r\n        return res.send(err);\r\n      } else {\r\n        req.body.invDataRow.forEach((el) => {\r\n          let newDetialRow = new invoiceDetails();\r\n          newDetialRow.invoice = newRow._id ;\r\n          newDetialRow.item = el._id ;\r\n          newDetialRow.item_id = el.item_id ;\r\n          newDetialRow.sell = el.sell ;\r\n          newDetialRow.count = el.count ;\r\n          newDetialRow.total = el.total ;\r\n          if (el.vat){\r\n            newDetialRow.vat = el.vat ;\r\n            newDetialRow.net = el.total + (el.vat * el.total ) ;\r\n          } else {\r\n            newDetialRow.vat = 0 ;\r\n            newDetialRow.net = el.total + (0.0 * el.total ) ;\r\n          }\r\n          newDetialRow.save(err => {\r\n            if (err) {\r\n              return res.send(err);\r\n            } \r\n          }) ;\r\n        });\r\n        return res.json({ message: \"saved\", _id: newRow._id });\r\n      }\r\n    });\r\n  });\r\n\r\n  // ======================   invoce   ==============================\r\n  // v1/itemsDetails/inv   -> get all data\r\n  api.get(\"/invoc\", (req, res) => {\r\n    const query = itemsDetails.findOne({ 'is_active': true, 'item_detail_id': req.query.item_id , 'real_count': { $gt: 0 } })\r\n      .populate({\r\n        path: 'csBills',\r\n        select: 'billNo'\r\n      })\r\n      .populate({\r\n        path: 'item',\r\n        select: 'name vat'\r\n      })\r\n      .populate({\r\n        path: 'Key',\r\n        select: 'disc -_id',\r\n      }) ; \r\n      /*.select({\r\n      \"buy\": 1,\r\n      \"csBills\": 1,\r\n      \"expiration_date\": 1,\r\n      \"item\": 1,\r\n        \"item_detail_id\": 1,\r\n        \"real_count\": 1,\r\n        \"sell\": 1,\r\n        \r\n      }) ; */\r\n    query.exec((err, data) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      if (data){\r\n      let s = data.toJSON() ;\r\n      s.add_dirct = true ; \r\n      return res.json(s);\r\n      }\r\n      else {\r\n        return res.json(data);\r\n      }\r\n    });\r\n  });\r\n  \r\n\r\n  // v1/itemsDetails/:id   -> get all data\r\n  api.get(\"/:id\", (req, res) => {\r\n    itemsDetails.find({ csBills: req.params.id }).populate({\r\n      path: 'item',\r\n      select: 'name _id',\r\n    }).exec((err, data) => {\r\n      if (err) {\r\n        return res.send(err);\r\n      }\r\n      return res.json(data);\r\n    });\r\n  });\r\n\r\n  return api;\r\n};\r\n"]}