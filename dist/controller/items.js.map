{"version":3,"sources":["../../src/controller/items.js"],"names":["config","db","api","post","authenticate","req","res","newItem","Item","id","body","name","cat","unit","place","sell","buy","max_order","reorder","vat","is_active","save","err","send","json","message","_id","get","size","page","colum","text","query","parseInt","find","where","equals","exec","data","s","toJSON","add_dirct","arr","split","length","or","$regex","$options","limit","skip","serch_arr","forEach","element","push","and","sst","countDocuments","JSON","parse","countrow","findById","populate","console","log","disc","put","params","delete","remove","key","datarow","styles","headerDark","fill","fgColor","rgb","font","color","sz","bold","alignment","vertical","horizontal","readingOrder","cellPink","cellGreen","normal1","border","top","style","bottom","left","right","english","red","heading","value","specification","displayName","headerStyle","cellStyle","width","cellFormat","merges","start","row","column","end","attachment","report","lean","users"],"mappings":"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","file":"items.js","sourcesContent":["import { Router } from \"express\";\r\nimport Item from \"../model/item\";\r\nimport Key from \"../model/key\";\r\n\r\nimport { authenticate, IsAdmin } from \"../middleware/authMiddleware\";\r\nimport { buildExport } from 'node-excel-export';\r\n\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n\r\n\r\n  // v1/item/add\r\n  api.post(\"/add\", authenticate, (req, res) => {\r\n    let newItem = new Item();\r\n    newItem.id = req.body.id;\r\n    newItem.name = req.body.name;\r\n    newItem.cat = req.body.cat;\r\n    newItem.unit = req.body.unit;\r\n    newItem.place = req.body.place;\r\n    newItem.sell = req.body.sell;\r\n    newItem.buy = req.body.buy;\r\n    newItem.max_order = req.body.max_order;\r\n    newItem.reorder = req.body.reorder;\r\n    newItem.vat = req.body.vat;\r\n    newItem.is_active = req.body.is_active;\r\n    newItem.save(err => {\r\n      if (err) {\r\n        res.send(err);\r\n      } else {\r\n        res.json({ message: \"saved\", _id: newItem._id });\r\n      }\r\n    });\r\n  });\r\n\r\n\r\n  // v1/item/   -> get all data\r\n  api.get(\"/\", (req, res) => {\r\n    let size = 20;\r\n    let page = 0;\r\n    let colum = \"\";\r\n    let text = \"\";\r\n    (req.query.page) ? page = parseInt(req.query.page) : page = 0;\r\n    (req.query.size) ? size = parseInt(req.query.size) : size = 20;\r\n    (req.query.colum) ? colum = (req.query.colum) : colum = \"\";\r\n    (req.query.text) ? text = (req.query.text) : text = \"\";\r\n\r\n    if ((colum) && (text)) {\r\n      if (colum === '*') {\r\n        Item.find()\r\n          .where('id').equals(text)\r\n          .exec((err, data) => {\r\n            if (data[0]) {\r\n                let s = data[0].toJSON();\r\n                s.add_dirct = true;\r\n                return res.json(s);\r\n            } else {\r\n              const arr = text.split(\" \");\r\n              if (arr.length === 1) {\r\n                Item.find()\r\n                  .or([{ name: { $regex: text, $options: 'i' } }, { id: { $regex: text, $options: 'i' } }])\r\n                  .limit(size)\r\n                  .skip(size * page)\r\n                  .exec((err, data) => {\r\n                    return res.json(data);\r\n                  });\r\n              } else if (arr.length > 1) {\r\n                let serch_arr = [];\r\n                arr.forEach((element) => {\r\n                  serch_arr.push({ name: { $regex: element, $options: 'i' } })\r\n                });\r\n                Item.find()\r\n                  .and(serch_arr)\r\n                  .limit(size)\r\n                  .skip(size * page)\r\n                  .exec((err, data) => {\r\n                    return res.json(data);\r\n                  });\r\n              }\r\n            }\r\n          });\r\n\r\n      } else {\r\n        const sst = '{ \"' + colum + '\": { \"$regex\": \"' + text + '\" , \"$options\": \"i\" } }';\r\n        Item.countDocuments(JSON.parse(sst), (err, countrow) => {\r\n          Item.find(JSON.parse(sst)).limit(size).skip(size * page).exec((err, data) => {\r\n            if (err) {\r\n              return res.send(err);\r\n            }\r\n            data.push({\r\n              'row_count': countrow\r\n            });\r\n            return res.json(data);\r\n          });\r\n        });\r\n\r\n      }\r\n    } else {\r\n      Item.countDocuments((err, countrow) => {\r\n        Item.find().skip(size * page).limit(size).exec((err, data) => {\r\n          if (err) {\r\n            return res.send(err);\r\n          }\r\n          data.push({\r\n            'row_count': countrow\r\n          });\r\n          return res.json(data);\r\n          return res.json(data);\r\n        });\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n  api.get(\"/wk\", (req, res) => {\r\n    /* \r\n    Item.findOne({ _id: '5a4e1c91b30ca556e65913ea' }).populate('Key', 'disc').exec( (err, data) => {\r\n      data.cat = Key;\r\n      console.log(data.cat);\r\n      res.send(data.Key.disc);\r\n    }) ;\r\n    */\r\n    Item.findById('5a4e1c91b30ca556e65913ea').populate('cat').populate('unit').exec((err, data) => {\r\n      // data.cat = Key;\r\n      console.log(data);\r\n      console.log(data.cat.disc);\r\n      res.send(data);\r\n    });\r\n\r\n  });\r\n\r\n  // /v1/items/:id    -- put\r\n  api.put(\"/:id\", authenticate, (req, res) => {\r\n    Item.findById(req.params.id, (err, newItem) => {\r\n      if (err) {\r\n        res.send(err);\r\n      } else {\r\n        newItem.id = req.body.id;\r\n        newItem.name = req.body.name;\r\n        newItem.cat = req.body.cat;\r\n        newItem.unit = req.body.unit;\r\n        newItem.place = req.body.place;\r\n        newItem.sell = req.body.sell;\r\n        newItem.buy = req.body.buy;\r\n        newItem.max_order = req.body.max_order;\r\n        newItem.reorder = req.body.reorder;\r\n        newItem.vat = req.body.vat;\r\n        newItem.is_active = req.body.is_active;\r\n        newItem.save(err => {\r\n          if (err) {\r\n            res.send(err);\r\n          } else {\r\n            res.json({ message: \"update\" });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n\r\n\r\n  // /v1/items/:id    -- delete\r\n  api.delete(\"/:id\", authenticate, (req, res) => {\r\n    Item.remove({ _id: req.params.id }, (err, key) => {\r\n      if (err) {\r\n        res.send(err);\r\n      } res.json({ message: \"remove\" });\r\n    });\r\n  });\r\n\r\n  //===================================================================================================================\r\n  // ******************************************************************************************************************\r\n  api.get(\"/exc\", (req, res) => {\r\n    Item.find().populate('cat').populate('unit').exec((err, datarow) => {\r\n      const styles = {\r\n        headerDark: {\r\n          fill: {\r\n            fgColor: {\r\n              rgb: 'FF000000'\r\n            }\r\n          },\r\n          font: {\r\n            color: {\r\n              rgb: 'FFFFFFFF'\r\n            },\r\n            sz: 14,\r\n            bold: true\r\n          },\r\n          alignment: {\r\n            vertical: \"center\",\r\n            horizontal: \"center\",\r\n            readingOrder: 2\r\n          }\r\n        },\r\n        cellPink: {\r\n          fill: {\r\n            fgColor: {\r\n              rgb: 'FFFFCCFF'\r\n            }\r\n          }\r\n        },\r\n        cellGreen: {\r\n          fill: {\r\n            fgColor: {\r\n              rgb: 'FF00FF00'\r\n            }\r\n          }\r\n        },\r\n        normal1: {\r\n          alignment: {\r\n            vertical: \"center\",\r\n            horizontal: \"center\",\r\n            readingOrder: 2\r\n          },\r\n          border: {\r\n            top: { style: \"thin\", color: \"FF000000\" },\r\n            bottom: { style: \"thin\", color: \"FF000000\" },\r\n            left: { style: \"thin\", color: \"FF000000\" },\r\n            right: { style: \"thin\", color: \"FF000000\" }\r\n          }\r\n        },\r\n        english: {\r\n          alignment: {\r\n            readingOrder: 1\r\n          },\r\n          border: {\r\n            top: { style: \"thin\", color: \"FF000000\" },\r\n            bottom: { style: \"thin\", color: \"FF000000\" },\r\n            left: { style: \"thin\", color: \"FF000000\" },\r\n            right: { style: \"thin\", color: \"FF000000\" }\r\n          }\r\n        },\r\n        red: {\r\n          fill: { fgColor: { rgb: 'FFFF0000' } },\r\n          border: {\r\n            top: { style: \"thin\", color: \"FF000000\" },\r\n            bottom: { style: \"thin\", color: \"FF000000\" },\r\n            left: { style: \"thin\", color: \"FF000000\" },\r\n            right: { style: \"thin\", color: \"FF000000\" }\r\n          },\r\n          alignment: {\r\n            vertical: \"center\",\r\n            horizontal: \"center\",\r\n            readingOrder: 1\r\n          }\r\n        }\r\n      };\r\n\r\n      const heading = [\r\n        [{ value: ' تقرير بالاصناف المدخلة و النواقص في الادخال ', style: styles.headerDark }],\r\n        [{ value: ' جميع الاصناف المدخلة ', style: styles.normal1 }] // <-- It can be only values \r\n      ];\r\n\r\n      const specification = {\r\n        id: {\r\n          displayName: 'رقم الصنف',\r\n          headerStyle: styles.headerDark, // <- Header style \r\n          cellStyle: function (value) { return (value) ? styles.english : styles.red; },\r\n          width: 120 // <- width in pixels \r\n        },\r\n        name: {\r\n          displayName: 'اسم الصنف',\r\n          headerStyle: styles.headerDark,\r\n          cellStyle: function (value) { return (value) ? styles.english : styles.red; },\r\n          width: 320,\r\n        },\r\n        cat: {\r\n          displayName: 'الوحدة',\r\n          headerStyle: styles.headerDark,\r\n          cellStyle: function (value) { return (value) ? styles.normal1 : styles.red; },\r\n          width: 80,\r\n          cellFormat: function (value) {\r\n            if (value) {\r\n              return (value.disc);\r\n            } else {\r\n              return '*'\r\n            }\r\n          }\r\n        },\r\n        unit: {\r\n          displayName: 'التصنيف',\r\n          headerStyle: styles.headerDark,\r\n          cellStyle: function (value) { return (value) ? styles.normal1 : styles.red; },\r\n          width: 100,\r\n          cellFormat: function (value) {\r\n            if (value) {\r\n              return (value.disc);\r\n            } else {\r\n              return '*'\r\n            }\r\n          }\r\n        },\r\n        max_order: {\r\n          displayName: 'الحد الاعلى',\r\n          headerStyle: styles.headerDark,\r\n          width: 90,\r\n          cellFormat: function (value) { return (value || value === 0) ? value : \"*\"; },\r\n          cellStyle: function (value) { return (value || value === 0) ? styles.normal1 : styles.red; },\r\n\r\n        },\r\n        reorder: {\r\n          displayName: 'كمية اعادة الطلب',\r\n          headerStyle: styles.headerDark,\r\n          cellStyle: function (value) { return (value || value === 0) ? styles.normal1 : styles.red; },\r\n          width: 120,\r\n          cellFormat: function (value) { return (value || value === 0) ? value : \"*\"; }\r\n\r\n        },\r\n        vat: {\r\n          displayName: 'vat',\r\n          headerStyle: styles.headerDark,\r\n          cellStyle: function (value) { return (value || value === 0) ? styles.normal1 : styles.red; },\r\n          width: 50,\r\n          cellFormat: function (value) { return (value || value === 0) ? value : \"*\"; }\r\n        },\r\n        is_active: {\r\n          displayName: 'فعال',\r\n          headerStyle: styles.headerDark,\r\n          cellStyle: function (value) { return (value) ? styles.normal1 : styles.red; },\r\n          width: 50,\r\n          cellFormat: function (value) { return (value) ? \"نعم\" : \"لا\"; }\r\n        }\r\n\r\n      }\r\n\r\n      const merges = [\r\n        { start: { row: 1, column: 1 }, end: { row: 1, column: 8 } },\r\n        { start: { row: 2, column: 1 }, end: { row: 2, column: 8 } }\r\n      ]\r\n\r\n      res.attachment('report.xlsx');\r\n      const report = buildExport(\r\n        [ // <- Notice that this is an array. Pass multiple sheets to create multi sheet report \r\n          {\r\n            name: 'الاصناف المدخلة في النظام',\r\n            heading: heading,\r\n            merges: merges,\r\n            specification: specification,\r\n            data: datarow\r\n          }\r\n        ]\r\n\r\n      );\r\n\r\n      //excel.Workbook.Views = [{ RTL: true }];\r\n      //excel.Workbook.readingOrder = \"LeftToRight\" ; //   \r\n      //excel.Workbook.tables.add(\"A1:D1\", true );\r\n      // if (!excel.Workbook) excel.Workbook = {};\r\n      // if (!excel.Workbook.Views) excel.Workbook.Views = [];\r\n      // if (!excel.Workbook.Views[0]) excel.Workbook.Views[0] = {};\r\n      // excel.Workbook.Views[0].RTL = true;\r\n      // You can then return this straight \r\n      // This is sails.js specific (in general you need to set headers) \r\n      return res.send(report);\r\n    });\r\n  });\r\n\r\n  api.get(\"/export\", (req, res) => {\r\n    Item.find().lean().exec(function (err, users) {\r\n        res.attachment('items.json');\r\n        return res.send(users);\r\n    }) ;\r\n  }) ; \r\n\r\n  return api;\r\n};\r\n"]}