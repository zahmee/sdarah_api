{"version":3,"sources":["../src/index.js"],"names":["LocalStrategy","require","Strategy","app","server","http","createServer","mongoose","Promise","use","bodyParser","json","limit","config","bodyLimit","passport","initialize","Account","usernameField","passwordField","authenticate","serializeUser","deserializeUser","routes","listen","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAHA,IAAMA,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAAhD;;;AAKA,IAAIC,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;AACAI,mBAASC,OAAT,GAAmBA,OAAnB;AACA;AACA;AACAL,IAAIM,GAAJ,CAAQ,qBAAR;AACAN,IAAIM,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB;AACpBC,WAAMC,iBAAOC;AADO,CAAhB,CAAR;;AAIA;AACAX,IAAIM,GAAJ,CAAQM,mBAASC,UAAT,EAAR;AACA,IAAIC,UAAUhB,QAAQ,iBAAR,CAAd;AACAc,mBAASN,GAAT,CAAa,IAAIT,aAAJ,CAAkB;AAC3BkB,mBAAc,UADa;AAE3BC,mBAAe;AAFY,CAAlB,EAITF,QAAQG,YAAR,EAJS,CAAb;AAMAL,mBAASM,aAAT,CAAuBJ,QAAQI,aAAR,EAAvB;AACAN,mBAASO,eAAT,CAAyBL,QAAQK,eAAR,EAAzB;;AAEA;AACAnB,IAAIM,GAAJ,CAAQ,KAAR,EAAgBc,gBAAhB;AACApB,IAAIC,MAAJ,CAAWoB,MAAX,CAAkBX,iBAAOY,IAAzB;AACAC,QAAQC,GAAR,oBAA8BxB,IAAIC,MAAJ,CAAWwB,OAAX,GAAqBH,IAAnD;;kBAEetB,G","file":"index.js","sourcesContent":["import http from 'http' ;\nimport express from 'express' ;\nimport bodyParser from 'body-parser' ;\nimport mongoose from 'mongoose' ;\nimport passport from \"passport\";\nconst LocalStrategy = require(\"passport-local\").Strategy ;\nimport config from './config' ;\nimport routes from './routes' ;\nimport cors from 'cors';\n\nlet app = express() ;\napp.server = http.createServer(app) ;\nmongoose.Promise = Promise;\n//   middleware\n//   parse application/json\napp.use(cors()) ;\napp.use(bodyParser.json({\n    limit:config.bodyLimit \n})) ;\n\n//   passport config <----------  important\napp.use(passport.initialize()) ;\nlet Account = require(\"./model/account\") ;\npassport.use(new LocalStrategy({\n    usernameField:\"username\" ,\n    passwordField :\"password\"\n},\n    Account.authenticate() \n)) ;\npassport.serializeUser(Account.serializeUser()) ;\npassport.deserializeUser(Account.deserializeUser()) ;\n\n//   api rounes v1\napp.use('/v1' , routes ) ;\napp.server.listen(config.port) ;\nconsole.log(`Start on port ${ app.server.address().port}`) ;\n\nexport default app ;"]}